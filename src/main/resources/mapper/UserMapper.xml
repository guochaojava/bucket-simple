<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guochaojava.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.guochaojava.model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, login_name, password, nick_name, telephone, email, create_time, last_login_time,
        status
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM user
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insertSelective" parameterType="com.guochaojava.model.User">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="loginName != null">
                login_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.guochaojava.model.User">
        update user
        <set>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectUserByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where login_name = #{loginName,jdbcType=VARCHAR}
    </select>
    <select id="selectPermissionsByLoginName" resultType="java.lang.String">
        SELECT p.code
        FROM permission p
            LEFT JOIN role_permission rp ON rp.permission_id = p.id
            LEFT JOIN user_role ur ON ur.role_id = rp.role_id
            LEFT JOIN `user` u ON u.id = ur.user_id
        WHERE u.login_name = #{loginName,jdbcType=VARCHAR}
    </select>
    <select id="selectRolesByLoginName" resultType="java.lang.String">
        SELECT r.code
        FROM user u LEFT JOIN user_role ur ON u.id = ur.user_id
            LEFT JOIN role r ON ur.role_id = r.id
        WHERE u.login_name = #{loginName,jdbcType=VARCHAR}
    </select>

    <select id="list" resultMap="BaseResultMap">
        SELECT
        u.*,r.name AS role_name,r.id AS role_id
        FROM
        USER u
        LEFT JOIN user_role ur ON ur.user_id = u.id
        LEFT JOIN role r ON r.id = ur.role_id
        <where>
            <if test="loginName != null">
                login_name like CONCAT('%',#{loginName},'%')
            </if>
            <if test="nickName != null">
                nick_name like CONCAT('%',#{nickName},'%')
            </if>
        </where>
    </select>

    <delete id="deleteByIds">
        delete from user
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateStatusByIds">
        UPDATE user
        SET `status` = CASE `status`
        WHEN 1 THEN
        2
        WHEN 2 THEN
        1
        END
        WHERE
        id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <insert id="insertRoleUser">
        INSERT INTO user_role (role_id, user_id) VALUES (#{0}, #{1})
    </insert>

    <update id="updateRoleUser">
        UPDATE user_role
        SET role_id = #{0}
        WHERE user_id = #{1}
    </update>

</mapper>